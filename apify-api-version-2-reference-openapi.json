{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0",
        "title": "Apify",
        "description": "The API version 2 is used to provide programmatic access to Apify\n<a href=\"https:\/\/apify.com\/docs\/actor\" target=\"_blank\" rel=\"noopener\">actors<\/a> and\nassociated resources such as\n<a href=\"https:\/\/apify.com\/docs\/storage\" target=\"_blank\" rel=\"noopener\">storage<\/a>.\nIn order to manage <a href=\"https:\/\/apify.com\/docs\/crawler\" target=\"_blank\" rel=\"noreferrer\">Apify crawlers<\/a>,\nplease use the <a href=\"https:\/\/apify.com\/docs\/api\/v1\" target=\"_top\">API version 1<\/a>.\n\nApify API is organized around [RESTful](https:\/\/en.wikipedia.org\/wiki\/Representational_state_transfer)\nHTTP endpoints.\nAll requests and responses (including errors) are encoded in [JSON](http:\/\/www.json.org\/) format with UTF-8 encoding,\nwith a few exceptions that are explicitly described.\n\n**All requests with JSON payloads need to specify the `Content-Type: application\/json` HTTP header!**\n\nTo access the API from a Node.js code, you can use the\n<a href=\"https:\/\/apify.com\/docs\/sdk\/apify-client-js\/latest\">apify-client<\/a> NPM pac",
        "termsOfService": "http:\/\/exmple.com\/license\/"
    },
    "servers": [
        "https:\/\/api.apify.com\/"
    ],
    "paths": {
        "\/v2\/acts": {
            "get": {
                "summary": "Get list of actors",
                "description": "Gets the list of all actors that the user created or used. The response is a list of objects where each object\ncontains a basic information about a single actor.\nTo only get actors created by the user, add the `my=1` query parameter.\n\nThe endpoint supports pagination using the `limit` and `offset` parameters and it will not return more than 1000 records.\n\nBy default, the records are sorted by the `createdAt` field in ascending order,\ntherefore you can use pagination to incrementally fetch all ac",
                "operationId": "Getlistofactors",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "my",
                        "in": "query",
                        "description": "If true returns only own actors. By default returns all the actors used by the user."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "summary": "Create actor",
                "description": "Creates a new actor with settings specified in an Actor object passed as JSON in the POST payload.\nThe response is the full actor object as returned by the\n[Get actor](#reference\/actors\/actor-object\/get-actor) endpoint.\n\nThe HTTP request must have the `Content-Type: application\/json` HTTP header!\n\nThe actor needs to define at least one version of the source code.\nFor more information, see [Version object](#reference\/actors\/version-object).",
                "operationId": "Createactor",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "my",
                        "in": "query",
                        "description": "If true returns only own actors. By default returns all the actors used by the user."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}": {
            "get": {
                "summary": "Get actor",
                "description": "Gets an object that contains all the details about a specific actor.",
                "operationId": "Getactor",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "summary": "Update actor",
                "description": "Updates settings of an actor using values specified by an actor object passed as JSON in the POST payload.\nIf the object does not define a specific property, its value will not be updated.\n\nThe response is the full actor object as returned by the\n[Get actor](#reference\/actors\/actor-object\/get-actor) endpoint.\n\nThe request needs to specify the `Content-Type: application\/json` HTTP header!",
                "operationId": "Updateactor",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "summary": "Delete actor",
                "description": "Deletes an actor.",
                "operationId": "Deleteactor",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/versions": {
            "get": {
                "summary": "Get list of versions",
                "description": "Gets the list of versions of a specific actor. The response is a JSON with the list\nof [Version objects](#reference\/actors\/version-object) where each\ncontains basic information about a single version.",
                "operationId": "Getlistofversions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "summary": "Create version",
                "description": "Creates an actor version using values specified by a [Version object](#reference\/actors\/version-object) passed as JSON in the POST payload.\n\nThe request needs to specify the `Content-Type: application\/json` HTTP header!\n\nThe response is the [Version object](#reference\/actors\/version-object) as returned by the\n[Get version](#reference\/actors\/version-object\/get-version) endpoint.",
                "operationId": "Createversion",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/versions\/{versionNumber}": {
            "get": {
                "summary": "Get version",
                "description": "The **Version object** contains the source code of a specific version of an actor.\nThe `sourceType` field indicates where the source code is hosted, and based\non its value the Version object has the following additional fields:\n\n\n  \n    \"SOURCE_CODE\"\n    \n        Source code is a single JavaScript\/Node.js file whose content is in the sourceCode field,\n        and uses a base Docker image specified in baseDockerImage.",
                "operationId": "Getversion",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "versionNumber",
                        "in": "path",
                        "description": "Actor major and minor version of the actor."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "summary": "Update version",
                "description": "The **Version object** contains the source code of a specific version of an actor.\nThe `sourceType` field indicates where the source code is hosted, and based\non its value the Version object has the following additional fields:\n\n\n  \n    \"SOURCE_CODE\"\n    \n        Source code is a single JavaScript\/Node.js file whose content is in the sourceCode field,\n        and uses a base Docker image specified in baseDockerImage.",
                "operationId": "Updateversion",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "versionNumber",
                        "in": "path",
                        "description": "Actor major and minor version of the actor."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "summary": "Delete version",
                "description": "The **Version object** contains the source code of a specific version of an actor.\nThe `sourceType` field indicates where the source code is hosted, and based\non its value the Version object has the following additional fields:\n\n\n  \n    \"SOURCE_CODE\"\n    \n        Source code is a single JavaScript\/Node.js file whose content is in the sourceCode field,\n        and uses a base Docker image specified in baseDockerImage.",
                "operationId": "Deleteversion",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "versionNumber",
                        "in": "path",
                        "description": "Actor major and minor version of the actor."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/webhooks": {
            "get": {
                "summary": "Get list of webhooks",
                "description": "Gets the list of webhooks of a specific actor. The response is a JSON with the list of objects where each object\ncontains basic information about a single webhook.\n\nThe endpoint supports pagination using the `limit` and `offset` parameters and it will not return more than 1000 records.\n\nBy default, the records are sorted by the `createdAt` field in ascending order,\nto sort the records in descending order, use the `desc=1` parameter.",
                "operationId": "Getlistofwebhooks",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/builds": {
            "get": {
                "summary": "Get list of builds",
                "description": "Gets the list of builds of a specific actor. The response is a JSON with the list of objects where each object\ncontains basic information about a single build.\n\nThe endpoint supports pagination using the `limit` and `offset` parameters and it will not return more than 1000 records.\n\nBy default, the records are sorted by the `startedAt` field in ascending order,\ntherefore you can use pagination to incrementally fetch all builds while new\nones are still being started. To sort the records in descen",
                "operationId": "Getlistofbuilds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    },
                    {
                        "name": "waitForFinish",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "useCache",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "betaPackages",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "summary": "Build actor",
                "description": "Builds an actor.\nThe response is the build object as returned by the\n[Get build](#reference\/actors\/build-object\/get-build) endpoint.",
                "operationId": "Buildactor",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "useCache",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "betaPackages",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "waitForFinish",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/builds\/{buildId}": {
            "get": {
                "summary": "Get build",
                "description": "Gets an object that contains all the details about a specific build of an actor.\n\nBy passing the optional `waitForFinish=1` parameter the API endpoint will synchronously wait for the build to finish.\nThis is useful to avoid periodic polling when waiting for an actor build to finish.",
                "operationId": "Getbuild",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "waitForFinish",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "buildId",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/builds\/{buildId}\/abort": {
            "post": {
                "summary": "Abort build",
                "description": "Aborts an actor build and returns an object that contains all the details about the build.\nOnly builds that are starting or running are aborted. For builds with status `FINISHED`, `FAILED`, `ABORTING` and `TIMED-OUT` this call does nothing.",
                "operationId": "Abortbuild",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "buildId",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/runs": {
            "get": {
                "summary": "Get list of runs",
                "description": "Gets the list of runs of a specific actor. The response is a list of objects where each object\ncontains basic information about a single actor run.\n\nThe endpoint supports pagination using the `limit` and `offset` parameters and it will not return more than 1000\narray elements.\n\nBy default, the records are sorted by the `startedAt` field in ascending order,\ntherefore you can use pagination to incrementally fetch all records while new\nones are still being created. To sort the records in descending",
                "operationId": "Getlistofruns",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    },
                    {
                        "name": "waitForFinish",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "memory",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "build",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "webhooks",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "summary": "Run actor",
                "description": "Runs an actor and immediately returns without waiting for the run to finish.\n\nThe POST payload including its `Content-Type` header is passed as `INPUT` to the actor (usually application\/json).\nThe actor is started with the default options; you can override them using various URL query parameters.\n\nThe response is the Run object as returned by the [Get run](#reference\/actors\/run-object\/get-run) API endpoint.\nIf you want to wait for the run to finish and receive the actual output of t",
                "operationId": "Runactor",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "memory",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "build",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "waitForFinish",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "webhooks",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/run-sync": {
            "post": {
                "summary": "With input",
                "description": "Runs a specific actor and returns its output.\n\nThe POST payload including its `Content-Type` header is passed as `INPUT` to the actor (usually application\/json).\nThe HTTP response contains actor's `OUTPUT` record from its default key-value store.\n\nThe actor is started with the default options; you can override them using various URL query parameters.\nIf the actor run exceeds 300 seconds,\nthe HTTP response will have status 408 (Request Timeout).",
                "operationId": "Withinput",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "outputRecordKey",
                        "in": "query",
                        "description": "Key of the record from run's default key-value store to be returned\n                                             in the response. By default, it is `OUTPUT`."
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "memory",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "build",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "webhooks",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            },
            "get": {
                "summary": "Without input",
                "description": "Runs a specific actor and returns its output.\nThe run must finish in 300 seconds otherwise the API endpoint returns a timeout error.\nThe actor is not passed any input.\n\nBeware that it might be impossible to maintain an idle HTTP connection for a long period of time,\ndue to client timeout or network conditions. Make sure your HTTP client is configured to have a long enough connection timeout.\nIf the connection breaks, you will not receive any information about",
                "operationId": "Withoutinput",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "outputRecordKey",
                        "in": "query",
                        "description": "Key of the record from run's default key-value store to be returned\n                                             in the response. By default, it is `OUTPUT`."
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "memory",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "build",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "webhooks",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/runs\/{runId}": {
            "get": {
                "summary": "Get run",
                "description": "Gets an object that contains all the details about a specific run of an actor.\n\nBy passing the optional `waitForFinish=1` parameter the API endpoint will synchronously wait for the build to finish.\nThis is useful to avoid periodic polling when waiting for actor build to complete.\n\nThis endpoints do not require the authentication token, the calls are authenticated using a hard-to-guess ID of the run.",
                "operationId": "Getrun",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Run ID."
                    },
                    {
                        "name": "waitForFinish",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/runs\/{runId}\/abort": {
            "post": {
                "summary": "Abort run",
                "description": "Aborts an actor run and returns an object that contains all the details about the run.\nOnly runs that are starting or running are aborted. For runs with status `FINISHED`, `FAILED`, `ABORTING` and `TIMED-OUT` this call does nothing.",
                "operationId": "Abortrun",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Run ID."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/runs\/{runId}\/metamorph": {
            "post": {
                "summary": "Metamorph run",
                "description": "Transforms an actor run into a run of another actor with a new input.\nThis is useful if you want to use another actor to finish the work\nof your current actor run, without the need to create a completely new run and waiting for its finish.\nFor the users of your actors, the metamorph operation is transparent, they will just see your actor got the work done.\n\nInternally, the system stops the Docker container corresponding to the actor run\nand starts a new container using a different Docker image.",
                "operationId": "Metamorphrun",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Run ID."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "targetActorId",
                        "in": "query",
                        "description": "ID of a target actor that the run should be transformed into."
                    },
                    {
                        "name": "build",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/runs\/{runId}\/resurrect": {
            "post": {
                "summary": "Resurrect run",
                "description": "Resurrects a finished actor run and returns an object that contains all the details about the resurrected run.\nOnly finished runs, i.e. runs with status `FINISHED`, `FAILED`, `ABORTED` and `TIMED-OUT` can be resurrected.\nRun status will be updated to RUNNING and its container will be restarted with the same storages\n(the same behaviour as when the run gets migrated to the new server).\n\nFor more information, see [Actor docs](https:\/\/apify.com\/docs\/actor#run-resurrect).",
                "operationId": "Resurrectrun",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Run ID."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/runs\/last\/{subPath}{token,status}": {
            "get": {
                "summary": "Get last run",
                "description": "This is not a single endpoint, but an entire group of endpoints that lets you to\nretrieve and manage the last run of given actor or any of its default storages.\nAll the endpoints require an authentication token.\n\nThe endpoints accept the same HTTP methods and query parameters as\nthe respective storage endpoints.\nThe base path represents the last actor run object is:\n\n`\/v2\/acts\/{actorId}\/runs\/last{?token,status}`\n\nUsing the `status` parameter you can filter a run with certain status\n(e.g. `SUCCEE",
                "operationId": "Getlastrun",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Filter for the run status."
                    },
                    {
                        "name": "subPath",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/actor-tasks": {
            "get": {
                "summary": "Get list of tasks",
                "description": "Gets the list of all tasks that the user created or used. The response is a list of objects where each object\ncontains essential information about a single task.\n\nThe endpoint supports pagination using the `limit` and `offset` parameters, and it does not return more than a 1000 records.\n\nBy default, the records are sorted by the `createdAt` field in ascending order;\ntherefore you can use pagination to incrementally fetch all tasks while new\nones are still being created. To sort the records in de",
                "operationId": "Getlistoftasks",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "summary": "Create task",
                "description": "Create a new task with settings specified by the object passed as JSON in the POST payload.\nThe response is the full task object as returned by the\n[Get task](#reference\/tasks\/task-object\/get-task) endpoint.\n\nThe request needs to specify the `Content-Type: application\/json` HTTP header!",
                "operationId": "Createtask",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/actor-tasks\/{actorTaskId}": {
            "get": {
                "summary": "Get task",
                "description": "Get an object that contains all the details about a task.",
                "operationId": "Gettask",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorTaskId",
                        "in": "path",
                        "description": "Task ID or a tilde-separated owner's username and task's name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "summary": "Update task",
                "description": "Update settings of a task using values specified by an object passed as JSON in the POST payload.\nIf the object does not define a specific property, its value is not updated.\n\nThe response is the full task object as returned by the\n[Get task](#reference\/tasks\/task-object\/get-task) endpoint.\n\nThe request needs to specify the `Content-Type: application\/json` HTTP header!",
                "operationId": "Updatetask",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorTaskId",
                        "in": "path",
                        "description": "Task ID or a tilde-separated owner's username and task's name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "summary": "Delete task",
                "description": "Delete the task specified through the `actorTaskId` parameter.",
                "operationId": "Deletetask",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorTaskId",
                        "in": "path",
                        "description": "Task ID or a tilde-separated owner's username and task's name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/actor-tasks\/{actorTaskId}\/input": {
            "get": {
                "summary": "Get task input",
                "description": "Returns the input of a given task.",
                "operationId": "Gettaskinput",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorTaskId",
                        "in": "path",
                        "description": "Task ID or a tilde-separated owner's username and task's name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "summary": "Update task input",
                "description": "Updates the input of a task using values specified by an object passed as JSON in the PUT payload.\nIf the object does not define a specific property, its value is not updated.\n\nThe response is the full task input as returned by the\n[Get task](#reference\/tasks\/task-input-object\/get-task-input) endpoint.\n\nThe request needs to specify the `Content-Type: application\/json` HTTP header!",
                "operationId": "Updatetaskinput",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorTaskId",
                        "in": "path",
                        "description": "Task ID or a tilde-separated owner's username and task's name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/actor-tasks\/{actorTaskId}\/webhooks": {
            "get": {
                "summary": "Get list of webhooks",
                "description": "Gets the list of webhooks of a specific actor task. The response is a JSON with the list of objects where each object\ncontains basic information about a single webhook.\n\nThe endpoint supports pagination using the `limit` and `offset` parameters and it will not return more than 1000 records.\n\nBy default, the records are sorted by the `createdAt` field in ascending order,\nto sort the records in descending order, use the `desc=1` parameter.",
                "operationId": "Getlistofwebhooks1",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorTaskId",
                        "in": "path",
                        "description": "Task ID or a tilde-separated owner's username and task's name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/actor-tasks\/{actorTaskId}\/runs": {
            "get": {
                "summary": "Get list of task runs",
                "description": "Get a list of runs of a specific task. The response is a list of objects where each object\ncontains essential information about a single task run.\n\nThe endpoint supports pagination using the `limit` and `offset` parameters, and it does not return more than a 1000\narray elements.\n\nBy default, the records are sorted by the `startedAt` field in ascending order;\ntherefore you can use pagination to incrementally fetch all records while new\nones are still being created. To sort the records in descendi",
                "operationId": "Getlistoftaskruns",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorTaskId",
                        "in": "path",
                        "description": "Task ID or a tilde-separated owner's username and task's name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    },
                    {
                        "name": "waitForFinish",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "webhooks",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "summary": "Run task",
                "description": "Runs an actor task and immediately returns without waiting for the run to finish.\n\nOptionally, you can override the actor input configuration by passing a JSON object as the POST payload\nand setting the `Content-Type: application\/json` HTTP header.\nNote that if the object in the POST payload does not define a particular input property,\nthe actor run uses the default value defined by the task (or actor's input schema if not defined by the task).\n\nThe response is the actor Run object as returned b",
                "operationId": "Runtask",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorTaskId",
                        "in": "path",
                        "description": "Task ID or a tilde-separated owner's username and task's name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "memory",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "build",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "waitForFinish",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "webhooks",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/actor-tasks\/{actorTaskId}\/run-sync": {
            "post": {
                "summary": "Run task synchronously (POST)",
                "description": "Runs an actor task and synchronously returns its output.\nThe run must finish in 300 seconds otherwise the API endpoint returns a timeout error.\n\nOptionally, you can override the actor input configuration by passing a JSON object as the POST payload\nand setting the `Content-Type: application\/json` HTTP header.\nNote that if the object in the POST payload does not define a particular input property,\nthe actor run uses the default value defined by the task (or ac",
                "operationId": "Runtasksynchronously(POST)",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorTaskId",
                        "in": "path",
                        "description": "Task ID or a tilde-separated owner's username and task's name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "memory",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "build",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "outputRecordKey",
                        "in": "query",
                        "description": "Key of the record from run's default key-value store to be returned\n                                             in the response. By default, it is `OUTPUT`."
                    },
                    {
                        "name": "webhooks",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            },
            "get": {
                "summary": "Run task synchronously (GET)",
                "description": "Run a specific task and return its output.\nThe run must finish in 300 seconds otherwise the API endpoint returns a timeout error.\n\nBeware that it might be impossible to maintain an idle HTTP connection for an extended period,\ndue to client timeout or network conditions. Make sure your HTTP client is configured to have a long enough connection timeout.\nIf the connection breaks, you will not receive any information about the run and its status.\n\nTo run the Task",
                "operationId": "Runtasksynchronously(GET)",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorTaskId",
                        "in": "path",
                        "description": "Task ID or a tilde-separated owner's username and task's name."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "memory",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "build",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "outputRecordKey",
                        "in": "query",
                        "description": "Key of the record from run's default key-value store to be returned\n                                             in the response. By default, it is `OUTPUT`."
                    },
                    {
                        "name": "webhooks",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/acts\/{actorId}\/runs\/last\/{subPath}{token,status,actorTaskId}": {
            "get": {
                "summary": "Get last run",
                "description": "This is not a single endpoint, but an entire group of endpoints that lets you to\nretrieve and manage the last run of given actor task or any of its default storages.\nAll the endpoints require an authentication token.\n\nThe endpoints accept the same HTTP methods and query parameters as\nthe respective storage endpoints.\nThe base path represents the last actor task run object is:\n\n`\/v2\/actor-tasks\/{actorTaskId}\/runs\/last{?token,status}`\n\nUsing the `status` parameter you can filter a run with certain",
                "operationId": "Getlastrun1",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "actorTaskId",
                        "in": "path",
                        "description": "Task ID or a tilde-separated owner's username and task's name."
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Filter for the run status."
                    },
                    {
                        "name": "actorId",
                        "in": "path",
                        "description": "Actor ID or a tilde-separated owner's username and actor name."
                    },
                    {
                        "name": "subPath",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/key-value-stores": {
            "get": {
                "summary": "Get list of key-value stores",
                "description": "Gets the list of key-value stores owned by the user.\nThe response is a list of objects where each objects contains a basic information about a single key-value store.\n\nThe endpoint supports pagination using the `limit` and `offset` parameters and it will not return more than 1000\narray elements.\n\nBy default, the records are sorted by the `createdAt` field in ascending order,\ntherefore you can use pagination to incrementally fetch all key-value stores while new\nones are still being created. To so",
                "operationId": "GetlistofkeyValuestores",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    },
                    {
                        "name": "unnamed",
                        "in": "query",
                        "description": "If `true` or `1` then all the stores are returned. By default, only named key-value stores are returned."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "summary": "Create key-value store",
                "description": "Creates a key-value store with a specific name. The response is the same object\nas returned by the [Get store](#reference\/key-value-stores\/store-object\/get-store) endpoint.\n\nIf there is another store with the same name, the endpoint does not create a new one and returns the existing object instead.",
                "operationId": "CreatekeyValuestore",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    },
                    {
                        "name": "unnamed",
                        "in": "query",
                        "description": "If `true` or `1` then all the stores are returned. By default, only named key-value stores are returned."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/key-value-stores\/{storeId}": {
            "get": {
                "summary": "Get store",
                "description": "Gets an object that contains all the details about a specific key-value store.",
                "operationId": "Getstore",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "Key-value store ID or `username~store-name`."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "summary": "Delete store",
                "description": "Deletes a key-value store.",
                "operationId": "Deletestore",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "Key-value store ID or `username~store-name`."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/key-value-stores\/{storeId}\/keys": {
            "get": {
                "summary": "Get list of keys",
                "description": "Returns a list of objects describing keys of a given key-value store, as well as some information about the values (e.g. size).\nThis endpoint is paginated using `exclusiveStartKey` and `limit` parameters - see [Pagination](#introduction\/response-structure) for more details.",
                "operationId": "Getlistofkeys",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "Key-value store ID or `username~store-name`."
                    },
                    {
                        "name": "exclusiveStartKey",
                        "in": "query",
                        "description": "All keys up to this one (including) are skipped from the result."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/key-value-stores\/{storeId}\/records\/{recordKey}": {
            "get": {
                "summary": "Get record",
                "description": "Gets a value stored in the key-value store under a specific key.\n\nIf the request defines the `Accept-Encoding: gzip` HTTP header then the response will be gzipped.",
                "operationId": "Getrecord",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "Key-value store ID or `username~store-name`."
                    },
                    {
                        "name": "recordKey",
                        "in": "path",
                        "description": "Key of the record."
                    },
                    {
                        "name": "disableRedirect",
                        "in": "query",
                        "description": "By default, the API responds with the HTTP 302 status to redirect the client to another URL for faster download of the record.\n                                      You can set `disableRedirect=1` to prevent this behavior and return the record directly."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "summary": "Put record",
                "description": "Stores a value under a specific key to the key-value store.\nThe value is passed as the PUT payload and it is stored with a MIME content type defined by the `Content-Type` request header.\n\n**IMPORTANT:** The limit of the request payload is 9 MB. If you want to upload a larger record\nor speed up your upload, use the [Direct upload URL](#reference\/key-value-stores\/direct-upload-url) endpoint instead.\n\nTo save bandwidth and speed up your upload, send the request payload compressed with Gzip compress",
                "operationId": "Putrecord",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "Key-value store ID or `username~store-name`."
                    },
                    {
                        "name": "recordKey",
                        "in": "path",
                        "description": "Key of the record."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "disableRedirect",
                        "in": "query",
                        "description": "By default, the API responds with the HTTP 302 status to redirect the client to another URL for faster download of the record.\n                                      You can set `disableRedirect=1` to prevent this behavior and return the record directly."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "summary": "Delete record",
                "description": "Removes a record specified by a key from the key-value store.",
                "operationId": "Deleterecord",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "Key-value store ID or `username~store-name`."
                    },
                    {
                        "name": "recordKey",
                        "in": "path",
                        "description": "Key of the record."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "disableRedirect",
                        "in": "query",
                        "description": "By default, the API responds with the HTTP 302 status to redirect the client to another URL for faster download of the record.\n                                      You can set `disableRedirect=1` to prevent this behavior and return the record directly."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/key-value-stores\/{storeId}\/records\/{recordKey}\/direct-upload-url": {
            "get": {
                "summary": "Get direct upload URL",
                "description": "Generates a unique URL that can be used to upload a record under a specific key to the key-value store.\nThe record must be uploaded to the resulting URL using a PUT request.\n\nThis endpoint is useful if your record is larger than the limit\nimposed by the [Put record](#reference\/key-value-stores\/record\/put-record) endpoint\n(i.e. 9 MB) or if you want to get the maximum speed for your upload.\n\nTo save bandwidth and speed up your upload, send the request payload compressed with Gzip compression and\na",
                "operationId": "GetdirectuploadURL",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "Key-value store ID or `username~store-name`."
                    },
                    {
                        "name": "recordKey",
                        "in": "path",
                        "description": "Key of the record."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/datasets": {
            "get": {
                "summary": "Get list of datasets",
                "description": "Lists datasets of user. Response is a JSON array of objects where each object\ncontains basic information about one dataset.\n\nBy default, the objects are sorted by the `createdAt` field in ascending order,\ntherefore you can use pagination to incrementally fetch all datasets while new\nones are still being created. To sort them in descending order, use `desc=1`\nparameter. The endpoint supports pagination using `limit` and `offset` parameters and it will not return more than 1000\narray elements.",
                "operationId": "Getlistofdatasets",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    },
                    {
                        "name": "unnamed",
                        "in": "query",
                        "description": "If `true` or `1` then all the stores are returned. By default, only named key-value stores are returned."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "summary": "Create dataset",
                "description": "Creates dataset of given name and returns its object. If dataset with given name already exists then returns\nits object.",
                "operationId": "Createdataset",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    },
                    {
                        "name": "unnamed",
                        "in": "query",
                        "description": "If `true` or `1` then all the stores are returned. By default, only named key-value stores are returned."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/datasets\/{datasetId}": {
            "get": {
                "summary": "Get dataset",
                "description": "Returns dataset object for given dataset ID.",
                "operationId": "Getdataset",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "Dataset ID or `username~dataset-name`."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "summary": "Delete dataset",
                "description": "Deletes given dataset.",
                "operationId": "Deletedataset",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "Dataset ID or `username~dataset-name`."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/datasets\/{datasetId}\/items": {
            "get": {
                "summary": "Get items",
                "description": "Returns data stored in the dataset in a desired format.\n\n### Response format\n\nThe format of the response depends on format query parameter.\n\nThe format parameter can have one of the following values:\njson, jsonl, xml, html, csv, xlsx and rss.\n\nThe following table describes how each format is treated.\n\n\n  \n    Format\n    Items",
                "operationId": "Getitems",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "Dataset ID or `username~dataset-name`."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Format of the results, possible values are: `json`, `jsonl`, `csv`, `html`, `xlsx`, `xml` and `rss`. The default value is `json`."
                    },
                    {
                        "name": "clean",
                        "in": "query",
                        "description": "If `true` or `1` then the API endpoint returns only non-empty items and skips hidden fields\n(i.e. fields starting with the # character).\nThe `clean` parameter is just a shortcut for `skipHidden=true` and `skipEmpty=true` parameters.\nNote that since some objects might be skipped from the output, that the result might contain less items than the `limit` value."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "A comma-separated list of fields which should be picked from the items,\nonly these fields will remain in the resulting record objects.\nNote that the fields in the outputted items are sorted the same way as they are specified in the `fields` query parameter.\nYou can use this feature to effectively fix the output format."
                    },
                    {
                        "name": "omit",
                        "in": "query",
                        "description": "A comma-separated list of fields which should be omitted from the items."
                    },
                    {
                        "name": "unwind",
                        "in": "query",
                        "description": "Name of a field which should be unwound. If the field is an array then every element of\nthe array will become a separate record and merged with parent object.\nIf the unwound field is an object then it is merged with the parent object\nIf the unwound field is missing or its value is neither an array nor an object and therefore cannot be merged with a parent object then the item gets preserved as it is.\nNote that the unwound items ignore the `desc` parameter."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    },
                    {
                        "name": "attachment",
                        "in": "query",
                        "description": "If `true` or `1` then the response will define the `Content-Disposition: attachment` header, forcing a web browser to download the file rather than to display it. By default this header is not present."
                    },
                    {
                        "name": "delimiter",
                        "in": "query",
                        "description": "A delimiter character for CSV files, only used if `format=csv`. You might need to URL-encode the character (e.g. use `%09` for tab or `%3B` for semicolon). The default delimiter is a simple comma (`,`)."
                    },
                    {
                        "name": "bom",
                        "in": "query",
                        "description": "All text responses are encoded in UTF-8 encoding. By default, the `format=csv` files are prefixed with\nthe UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html` and `rss` files are not.\nIf you want to override this default behavior, specify `bom=1` query parameter to include the BOM or `bom=0` to skip it."
                    },
                    {
                        "name": "xmlRoot",
                        "in": "query",
                        "description": "Overrides default root element name of `xml` output. By default the root element is `items`."
                    },
                    {
                        "name": "xmlRow",
                        "in": "query",
                        "description": "Overrides default element name that wraps each page or page function result object in `xml` output. By default the element name is `item`."
                    },
                    {
                        "name": "skipHeaderRow",
                        "in": "query",
                        "description": "If `true` or `1` then header row in the `csv` format is skipped."
                    },
                    {
                        "name": "skipHidden",
                        "in": "query",
                        "description": "If `true` or `1` then hidden fields are skipped from the output,\ni.e. fields starting with the `#` character."
                    },
                    {
                        "name": "skipEmpty",
                        "in": "query",
                        "description": "If `true` or `1` then empty items are skipped from the output.\nNote that if used, the results might contain less items than the limit value."
                    },
                    {
                        "name": "simplified",
                        "in": "query",
                        "description": "If `true` or `1` then, the endpoint applies the `fields=url,pageFunctionResult,errorInfo`\nand `unwind=pageFunctionResult` query parameters. This feature is used to emulate simplified results provided by the\nlegacy Apify Crawler product and it's not recommended to use it in new integrations."
                    },
                    {
                        "name": "skipFailedPages",
                        "in": "query",
                        "description": "If `true` or `1` then, the all the items with errorInfo property will be skipped from the output.\nThis feature is here to emulate functionality of API v1 used for the legacy Apify Crawler product and it's not recommended to use it in new integrations."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "summary": "Put items",
                "description": "Appends an item or an array of items to the end of the dataset.\nThe POST payload is a JSON object or a JSON array of objects to save into the dataset.\n\n**IMPORTANT:** The limit of request payload size for the dataset is 5 MB. If the array exceeds the size,\nyou'll need to split it into a number of smaller arrays.",
                "operationId": "Putitems",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "Dataset ID or `username~dataset-name`."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Format of the results, possible values are: `json`, `jsonl`, `csv`, `html`, `xlsx`, `xml` and `rss`. The default value is `json`."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "attachment",
                        "in": "query",
                        "description": "If `true` or `1` then the response will define the `Content-Disposition: attachment` header, forcing a web browser to download the file rather than to display it. By default this header is not present."
                    },
                    {
                        "name": "delimiter",
                        "in": "query",
                        "description": "A delimiter character for CSV files, only used if `format=csv`. You might need to URL-encode the character (e.g. use `%09` for tab or `%3B` for semicolon). The default delimiter is a simple comma (`,`)."
                    },
                    {
                        "name": "bom",
                        "in": "query",
                        "description": "All text responses are encoded in UTF-8 encoding. By default, the `format=csv` files are prefixed with\nthe UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html` and `rss` files are not.\nIf you want to override this default behavior, specify `bom=1` query parameter to include the BOM or `bom=0` to skip it."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    },
                    {
                        "name": "xmlRoot",
                        "in": "query",
                        "description": "Overrides default root element name of `xml` output. By default the root element is `items`."
                    },
                    {
                        "name": "xmlRow",
                        "in": "query",
                        "description": "Overrides default element name that wraps each page or page function result object in `xml` output. By default the element name is `item`."
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "A comma-separated list of fields which should be picked from the items,\nonly these fields will remain in the resulting record objects.\nNote that the fields in the outputted items are sorted the same way as they are specified in the `fields` query parameter.\nYou can use this feature to effectively fix the output format."
                    },
                    {
                        "name": "omit",
                        "in": "query",
                        "description": "A comma-separated list of fields which should be omitted from the items."
                    },
                    {
                        "name": "unwind",
                        "in": "query",
                        "description": "Name of a field which should be unwound. If the field is an array then every element of\nthe array will become a separate record and merged with parent object.\nIf the unwound field is an object then it is merged with the parent object\nIf the unwound field is missing or its value is neither an array nor an object and therefore cannot be merged with a parent object then the item gets preserved as it is.\nNote that the unwound items ignore the `desc` parameter."
                    },
                    {
                        "name": "skipHeaderRow",
                        "in": "query",
                        "description": "If `true` or `1` then header row in the `csv` format is skipped."
                    },
                    {
                        "name": "clean",
                        "in": "query",
                        "description": "If `true` or `1` then the API endpoint returns only non-empty items and skips hidden fields\n(i.e. fields starting with the # character).\nThe `clean` parameter is just a shortcut for `skipHidden=true` and `skipEmpty=true` parameters.\nNote that since some objects might be skipped from the output, that the result might contain less items than the `limit` value."
                    },
                    {
                        "name": "skipHidden",
                        "in": "query",
                        "description": "If `true` or `1` then hidden fields are skipped from the output,\ni.e. fields starting with the `#` character."
                    },
                    {
                        "name": "skipEmpty",
                        "in": "query",
                        "description": "If `true` or `1` then empty items are skipped from the output.\nNote that if used, the results might contain less items than the limit value."
                    },
                    {
                        "name": "simplified",
                        "in": "query",
                        "description": "If `true` or `1` then, the endpoint applies the `fields=url,pageFunctionResult,errorInfo`\nand `unwind=pageFunctionResult` query parameters. This feature is used to emulate simplified results provided by the\nlegacy Apify Crawler product and it's not recommended to use it in new integrations."
                    },
                    {
                        "name": "skipFailedPages",
                        "in": "query",
                        "description": "If `true` or `1` then, the all the items with errorInfo property will be skipped from the output.\nThis feature is here to emulate functionality of API v1 used for the legacy Apify Crawler product and it's not recommended to use it in new integrations."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/request-queues": {
            "get": {
                "summary": "Get list of request queues",
                "description": "Lists request queues of user. Response is a JSON array of objects where each object\ncontains basic information about one queue.\n\nBy default, the objects are sorted by the `createdAt` field in ascending order,\ntherefore you can use pagination to incrementally fetch all queues while new\nones are still being created. To sort them in descending order, use `desc=1`\nparameter. The endpoint supports pagination using `limit` and `offset` parameters and it will not return more than 1000\narray elements.",
                "operationId": "Getlistofrequestqueues",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    },
                    {
                        "name": "unnamed",
                        "in": "query",
                        "description": "If `true` or `1` then all the stores are returned. By default, only named key-value stores are returned."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "summary": "Create request queue",
                "description": "Creates queue of given name and returns its object. If a queue with the given name already exists then the endpoint returns\nits object.",
                "operationId": "Createrequestqueue",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    },
                    {
                        "name": "unnamed",
                        "in": "query",
                        "description": "If `true` or `1` then all the stores are returned. By default, only named key-value stores are returned."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/request-queues\/{queueId}": {
            "get": {
                "summary": "Get request queue",
                "description": "Returns queue object for given queue ID.",
                "operationId": "Getrequestqueue",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "queueId",
                        "in": "path",
                        "description": "Queue ID or `username~queue-name`."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "summary": "Delete request queue",
                "description": "Deletes given queue.",
                "operationId": "Deleterequestqueue",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "queueId",
                        "in": "path",
                        "description": "Queue ID or `username~queue-name`."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/request-queues\/{queueId}\/requests": {
            "post": {
                "summary": "Add request",
                "description": "Adds request to the queue. Response contains ID of the request and info if request was already present in the queue or handled.\n\nIf request with same `uniqueKey` was already present in the queue then returns an ID of existing request.",
                "operationId": "Addrequest",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "queueId",
                        "in": "path",
                        "description": "Queue ID or `username~queue-name`."
                    },
                    {
                        "name": "forefront",
                        "in": "query",
                        "description": "Determines if request should be added to the head of the queue or to the end. Default value is `false` (end of queue)."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "clientKey",
                        "in": "query",
                        "description": "A unique identifier of the client accessing the request queue. It must be a string between 1 and 32 characters long. This identifier is used to determine whether the queue was accessed by multiple clients. If `clientKey` is not provided,\nthe system considers this API call to come from a new client. For details, see the `hadMultipleClients` field returned by the [Get head](#reference\/request-queues\/queue-head) operation."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/request-queues\/{queueId}\/requests\/{requestId}": {
            "get": {
                "summary": "Get request",
                "description": "Returns request from queue.",
                "operationId": "Getrequest",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "queueId",
                        "in": "path",
                        "description": "Queue ID or `username~queue-name`."
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "Request ID."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "forefront",
                        "in": "query",
                        "description": "Determines if request should be added to the head of the queue or to the end. Default value is `false` (end of queue)."
                    },
                    {
                        "name": "clientKey",
                        "in": "query",
                        "description": "A unique identifier of the client accessing the request queue. It must be a string between 1 and 32 characters long. This identifier is used to determine whether the queue was accessed by multiple clients. If `clientKey` is not provided,\nthe system considers this API call to come from a new client. For details, see the `hadMultipleClients` field returned by the [Get head](#reference\/request-queues\/queue-head) operation."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "summary": "Update request",
                "description": "Updates request in queue. Mark request as handled by setting `request.handledAt = new Date()`. If `handledAt` is set then request will be removed from head of the queue.",
                "operationId": "Updaterequest",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "queueId",
                        "in": "path",
                        "description": "Queue ID or `username~queue-name`."
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "Request ID."
                    },
                    {
                        "name": "forefront",
                        "in": "query",
                        "description": "Determines if request should be added to the head of the queue or to the end. Default value is `false` (end of queue)."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "clientKey",
                        "in": "query",
                        "description": "A unique identifier of the client accessing the request queue. It must be a string between 1 and 32 characters long. This identifier is used to determine whether the queue was accessed by multiple clients. If `clientKey` is not provided,\nthe system considers this API call to come from a new client. For details, see the `hadMultipleClients` field returned by the [Get head](#reference\/request-queues\/queue-head) operation."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "summary": "Delete request",
                "description": "Deletes given request from queue.",
                "operationId": "Deleterequest",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "queueId",
                        "in": "path",
                        "description": "Queue ID or `username~queue-name`."
                    },
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "Request ID."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "clientKey",
                        "in": "query",
                        "description": "A unique identifier of the client accessing the request queue. It must be a string between 1 and 32 characters long. This identifier is used to determine whether the queue was accessed by multiple clients. If `clientKey` is not provided,\nthe system considers this API call to come from a new client. For details, see the `hadMultipleClients` field returned by the [Get head](#reference\/request-queues\/queue-head) operation."
                    },
                    {
                        "name": "forefront",
                        "in": "query",
                        "description": "Determines if request should be added to the head of the queue or to the end. Default value is `false` (end of queue)."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/request-queues\/{queueId}\/head": {
            "get": {
                "summary": "Get head",
                "description": "Returns given number of first requests from the queue.\n\nThe response contains the `hadMultipleClients` boolean field which indicates that the queue was accessed by more than one client (with unique or empty `clientKey`).\nThis field is used by [Apify SDK](https:\/\/sdk.apify.com) to determine whether the local cache is consistent with the request queue, and thus optimize performance of certain operations.",
                "operationId": "Gethead",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "queueId",
                        "in": "path",
                        "description": "Queue ID or `username~queue-name`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "clientKey",
                        "in": "query",
                        "description": "A unique identifier of the client accessing the request queue. It must be a string between 1 and 32 characters long. This identifier is used to determine whether the queue was accessed by multiple clients. If `clientKey` is not provided,\nthe system considers this API call to come from a new client. For details, see the `hadMultipleClients` field returned by the [Get head](#reference\/request-queues\/queue-head) operation."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/webhooks": {
            "get": {
                "summary": "Get list of webhooks",
                "description": "Gets the list of webhooks that the user created.\n\nThe endpoint supports pagination using the `limit` and `offset` parameters and it will not return more than 1000 records.\nBy default, the records are sorted by the `createdAt` field in ascending order. To sort the records in descending order, use the `desc=1`\nparameter.",
                "operationId": "Getlistofwebhooks12",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "summary": "Create webhook",
                "description": "Creates a new webhook with settings provided by the webhook object passed as JSON in the payload.\nThe response is the created webhook object.\n\nTo make sure that the same webhook is not created twice, use the `idempotencyKey` parameter.\nMultiple calls to create webhook with the same idempotency key will only create the webhook\nwith the first call and return the existing webhook on subsequent calls. Idempotency keys\nmust be unique, so use a UUID or another random string with enough entropy.\n\nThe r",
                "operationId": "Createwebhook",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/webhooks\/{webhookId}": {
            "get": {
                "summary": "Get webhook",
                "description": "Gets webhook object with all details.",
                "operationId": "Getwebhook",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "webhookId",
                        "in": "path",
                        "description": "Webhook ID."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "summary": "Update webhook",
                "description": "Updates a webhook using values specified by a webhook object passed as JSON in the POST payload.\nIf the object does not define a specific property, its value will not be updated.\n\nThe response is the full webhook object as returned by the\n[Get webhook](#reference\/webhooks\/webhook-object\/get-webhook) endpoint.\n\nThe request needs to specify the `Content-Type: application\/json` HTTP header!",
                "operationId": "Updatewebhook",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "webhookId",
                        "in": "path",
                        "description": "Webhook ID."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "summary": "Delete webhook",
                "description": "Deletes an webhook.",
                "operationId": "Deletewebhook",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "webhookId",
                        "in": "path",
                        "description": "Webhook ID."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/webhook-dispatches": {
            "get": {
                "summary": "Get list of webhook dispatches",
                "description": "Gets the list of webhook dispatches that the user have.\n\nThe endpoint supports pagination using the `limit` and `offset` parameters and it will not return more than 1000 records.\nBy default, the records are sorted by the `createdAt` field in ascending order. To sort the records in descending order, use the `desc=1`\nparameter.",
                "operationId": "Getlistofwebhookdispatches",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records that should be skipped at the start. The default value is `0`."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return. The default value as well as the maximum is `1000`."
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "description": "If `true` or `1` then the objects are sorted by the `createdAt` field in descending order. By default, they are sorted in ascending order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/webhook-dispatches\/{dispatchId}": {
            "get": {
                "summary": "Get webhook dispatch",
                "description": "Gets webhook dispatch object with all details.",
                "operationId": "Getwebhookdispatch",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "dispatchId",
                        "in": "path",
                        "description": "Webhook dispacth ID."
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/logs\/{buildOrRunId}": {
            "get": {
                "summary": "Get log",
                "description": "Responds with HTTP status 302 to redirect to an URL containing the requested log. The log has a content type `text\/plain` and it is encoded as `gzip` returned with\nappropriate HTTP headers. The log has following format:\n\n```\n2017-07-14T06:00:49.733Z Application started.\n2017-07-14T06:00:49.741Z Input: { test: 123 }\n2017-07-14T06:00:49.752Z Some useful debug information follows.\n```",
                "operationId": "Getlog",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "buildOrRunId",
                        "in": "path",
                        "description": "ID of the actor build or run."
                    },
                    {
                        "name": "stream",
                        "in": "query",
                        "description": "If `true` or `1` then the logs will be streamed as long as the run or build is running."
                    },
                    {
                        "name": "download",
                        "in": "query",
                        "description": "If `true` or `1` then the web browser will download the log file rather than open it in a tab."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/users\/{userId}": {
            "get": {
                "summary": "Get public user data",
                "description": "Returns public information about a specific user account, similar to what can be seen on public profile pages (e.g. https:\/\/apify.com\/apify).\nThis operation requires no authentication token.",
                "operationId": "Getpublicuserdata",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID or username."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "\/v2\/users\/me": {
            "get": {
                "summary": "Get private user data",
                "description": "Returns information about the current user account, including both public and private information.\nThe user account is identified by the provided authentication token.",
                "operationId": "Getprivateuserdata",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "API authentication token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Actor": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "username": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "isPublic": {
                        "description": "",
                        "type": "boolean"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "restartOnError": {
                        "description": "",
                        "type": "boolean"
                    },
                    "stats": {
                        "description": "",
                        "type": ""
                    },
                    "versions": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "stats": {
                "type": "object",
                "properties": {
                    "totalBuilds": {
                        "description": "",
                        "type": "number"
                    },
                    "totalRuns": {
                        "description": "",
                        "type": "number"
                    },
                    "totalUsers": {
                        "description": "",
                        "type": "number"
                    },
                    "totalUsers7Days": {
                        "description": "",
                        "type": "number"
                    },
                    "totalUsers30Days": {
                        "description": "",
                        "type": "number"
                    },
                    "totalUsers90Days": {
                        "description": "",
                        "type": "number"
                    },
                    "totalMetamorphs": {
                        "description": "",
                        "type": "number"
                    },
                    "lastRunStartedAt": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "versions": {
                "type": "array"
            },
            "ActCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "isPublic": {
                        "description": "",
                        "type": "boolean"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "restartOnError": {
                        "description": "",
                        "type": "boolean"
                    },
                    "versions": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "ActUpdate": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "isPublic": {
                        "description": "",
                        "type": "boolean"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "restartOnError": {
                        "description": "",
                        "type": "boolean"
                    },
                    "versions": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "ActorShort1": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "username": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Task": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "",
                        "type": "string"
                    },
                    "actId": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "username": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "removedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "stats": {
                        "description": "",
                        "type": ""
                    },
                    "options": {
                        "description": "",
                        "type": ""
                    },
                    "input": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "options": {
                "type": "object",
                "properties": {
                    "build": {
                        "description": "",
                        "type": "string"
                    },
                    "timeoutSecs": {
                        "description": "",
                        "type": "number"
                    },
                    "memoryMbytes": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "input": {
                "type": "object",
                "properties": {
                    "hello": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "TaskShort1": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "",
                        "type": "string"
                    },
                    "actId": {
                        "description": "",
                        "type": "string"
                    },
                    "actName": {
                        "description": "",
                        "type": "string"
                    },
                    "actUsername": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "username": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "stats": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "TaskCreate": {
                "type": "object",
                "properties": {
                    "actId": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "options": {
                        "description": "",
                        "type": ""
                    },
                    "input": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "TaskUpdate": {
                "type": "object",
                "properties": {
                    "actId": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "options": {
                        "description": "",
                        "type": ""
                    },
                    "input": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Version": {
                "type": "object",
                "properties": {
                    "versionNumber": {
                        "description": "",
                        "type": "string"
                    },
                    "sourceType": {
                        "description": "",
                        "type": ""
                    },
                    "buildTag": {
                        "description": "",
                        "type": "string"
                    },
                    "envVars": {
                        "description": "",
                        "type": "array"
                    },
                    "baseDockerImage": {
                        "description": "",
                        "type": "string"
                    },
                    "applyEnvVarsToBuild": {
                        "description": "",
                        "type": "boolean"
                    },
                    "sourceCode": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "sourceType": {
                "type": "object"
            },
            "envVars": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "isSecret": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "VersionUpdate": {
                "type": "object",
                "properties": {
                    "versionNumber": {
                        "description": "",
                        "type": "string"
                    },
                    "sourceType": {
                        "description": "",
                        "type": ""
                    },
                    "buildTag": {
                        "description": "",
                        "type": "string"
                    },
                    "envVars": {
                        "description": "",
                        "type": "array"
                    },
                    "baseDockerImage": {
                        "description": "",
                        "type": "string"
                    },
                    "applyEnvVarsToBuild": {
                        "description": "",
                        "type": "boolean"
                    },
                    "sourceCode": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Build": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "actId": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "",
                        "type": "string"
                    },
                    "startedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "finishedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "description": "",
                        "type": ""
                    },
                    "stats": {
                        "description": "",
                        "type": ""
                    },
                    "version": {
                        "description": "",
                        "type": "string"
                    },
                    "readme": {
                        "description": "",
                        "type": "string"
                    },
                    "inputSchema": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "meta": {
                "type": "object",
                "properties": {
                    "source": {
                        "description": "",
                        "type": "string"
                    },
                    "clientIp": {
                        "description": "",
                        "type": "string"
                    },
                    "userAgent": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "BuildShort1": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "startedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "finishedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "version": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "BuildAborted": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "actId": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "",
                        "type": "string"
                    },
                    "startedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "finishedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "description": "",
                        "type": ""
                    },
                    "stats": {
                        "description": "",
                        "type": ""
                    },
                    "version": {
                        "description": "",
                        "type": "string"
                    },
                    "readme": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Run": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "buildId": {
                        "description": "",
                        "type": "string"
                    },
                    "actId": {
                        "description": "",
                        "type": "string"
                    },
                    "actTaskId": {
                        "description": "",
                        "type": "string"
                    },
                    "startedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "finishedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultKeyValueStoreId": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultDatasetId": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultRequestQueueId": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "description": "",
                        "type": ""
                    },
                    "stats": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "RunShort1": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "buildId": {
                        "description": "",
                        "type": "string"
                    },
                    "startedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "finishedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultKeyValueStoreId": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultDatasetId": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultRequestQueueId": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "TaskRun": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "buildId": {
                        "description": "",
                        "type": "string"
                    },
                    "actId": {
                        "description": "",
                        "type": "string"
                    },
                    "actTaskId": {
                        "description": "",
                        "type": "string"
                    },
                    "startedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "finishedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultKeyValueStoreId": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultDatasetId": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultRequestQueueId": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "description": "",
                        "type": ""
                    },
                    "stats": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "RunAborted": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "buildId": {
                        "description": "",
                        "type": "string"
                    },
                    "actId": {
                        "description": "",
                        "type": "string"
                    },
                    "startedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "finishedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultKeyValueStoreId": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultDatasetId": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultRequestQueueId": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "description": "",
                        "type": ""
                    },
                    "stats": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "RunMetamorphed": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "buildId": {
                        "description": "",
                        "type": "string"
                    },
                    "actId": {
                        "description": "",
                        "type": "string"
                    },
                    "startedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "finishedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultKeyValueStoreId": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultDatasetId": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultRequestQueueId": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "description": "",
                        "type": ""
                    },
                    "stats": {
                        "description": "",
                        "type": ""
                    },
                    "metamorphs": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "metamorphs": {
                "type": "object",
                "properties": {
                    "createdAt `2015-11-30T07:39:24.202Z`": {
                        "description": "",
                        "type": "string"
                    },
                    "actorId   `nspoEjklmnsF2oosD`": {
                        "description": "",
                        "type": "string"
                    },
                    "buildId   `ME6oKecqy5kXDS4KQ`": {
                        "description": "",
                        "type": "string"
                    },
                    "inputKey  `INPUT-METAMORPH-1`": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "KVStore": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "accessedAt": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "KVStoreShort1": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "accessedAt": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Dataset": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "accessedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "itemCount": {
                        "description": "",
                        "type": "number"
                    },
                    "cleanItemCount": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "DatasetShort1": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "accessedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "itemCount": {
                        "description": "",
                        "type": "number"
                    },
                    "cleanItemCount": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "RequestQueue": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "accessedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "totalRequestCount": {
                        "description": "",
                        "type": "number"
                    },
                    "handledRequestCount": {
                        "description": "",
                        "type": "number"
                    },
                    "pendingRequestCount": {
                        "description": "",
                        "type": "number"
                    },
                    "hadMultipleClients": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "RequestQueueShort1": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "accessedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "totalRequestCount": {
                        "description": "",
                        "type": "number"
                    },
                    "handledRequestCount": {
                        "description": "",
                        "type": "number"
                    },
                    "pendingRequestCount": {
                        "description": "",
                        "type": "number"
                    },
                    "hadMultipleClients": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "RequestOperationInfo": {
                "type": "object",
                "properties": {
                    "requestId": {
                        "description": "",
                        "type": "string"
                    },
                    "wasAlreadyPresent": {
                        "description": "",
                        "type": "boolean"
                    },
                    "wasAlreadyHandled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "RequestWithoutId": {
                "type": "object",
                "properties": {
                    "uniqueKey": {
                        "description": "",
                        "type": "string"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "method": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Request1": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "uniqueKey": {
                        "description": "",
                        "type": "string"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "method": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "UserPublicInfo": {
                "type": "object",
                "properties": {
                    "username": {
                        "description": "",
                        "type": "string"
                    },
                    "profile": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "profile": {
                "type": "object",
                "properties": {
                    "bio": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "pictureUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "githubUsername": {
                        "description": "",
                        "type": "string"
                    },
                    "websiteUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "twitterUsername": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "UserPrivateInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "username": {
                        "description": "",
                        "type": "string"
                    },
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "profile": {
                        "description": "",
                        "type": ""
                    },
                    "proxy": {
                        "description": "",
                        "type": ""
                    },
                    "limits": {
                        "description": "",
                        "type": ""
                    },
                    "currentBillingPeriod": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "proxy": {
                "type": "object",
                "properties": {
                    "password": {
                        "description": "",
                        "type": "string"
                    },
                    "groups": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "limits": {
                "type": "object",
                "properties": {
                    "maxParallelCrawlers": {
                        "description": "",
                        "type": "number"
                    },
                    "monthlyPages": {
                        "description": "",
                        "type": "number"
                    },
                    "monthlyComputeUnits": {
                        "description": "",
                        "type": "number"
                    },
                    "dataRetentionDays": {
                        "description": "",
                        "type": "number"
                    },
                    "maxMemoryMbytes": {
                        "description": "",
                        "type": "number"
                    },
                    "maxActsCount": {
                        "description": "",
                        "type": "number"
                    },
                    "maxActs2Count": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "currentBillingPeriod": {
                "type": "object",
                "properties": {
                    "startAt": {
                        "description": "",
                        "type": "string"
                    },
                    "endAt": {
                        "description": "",
                        "type": "string"
                    },
                    "usage": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Webhook": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "",
                        "type": "string"
                    },
                    "isAdHoc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "eventTypes": {
                        "description": "",
                        "type": "array"
                    },
                    "condition": {
                        "description": "",
                        "type": ""
                    },
                    "ignoreSslErrors": {
                        "description": "",
                        "type": "boolean"
                    },
                    "doNotRetry": {
                        "description": "",
                        "type": "boolean"
                    },
                    "requestUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "payloadTemplate": {
                        "description": "",
                        "type": "string"
                    },
                    "lastDispatch": {
                        "description": "",
                        "type": ""
                    },
                    "stats": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "eventTypes": {
                "type": "array"
            },
            "condition": {
                "type": "object",
                "properties": {
                    "actorId": {
                        "description": "",
                        "type": "string"
                    },
                    "actorTaskId": {
                        "description": "",
                        "type": "string"
                    },
                    "actorRunId": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "lastDispatch": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "finishedAt": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "WebhookShort": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "modifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "",
                        "type": "string"
                    },
                    "isAdHoc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "eventTypes": {
                        "description": "",
                        "type": "array"
                    },
                    "condition": {
                        "description": "",
                        "type": ""
                    },
                    "ignoreSslErrors": {
                        "description": "",
                        "type": "boolean"
                    },
                    "requestUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "lastDispatch": {
                        "description": "",
                        "type": ""
                    },
                    "stats": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "WebhookCreate": {
                "type": "object",
                "properties": {
                    "isAdHoc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "eventTypes": {
                        "description": "",
                        "type": "array"
                    },
                    "condition": {
                        "description": "",
                        "type": ""
                    },
                    "idempotencyKey": {
                        "description": "",
                        "type": "string"
                    },
                    "ignoreSslErrors": {
                        "description": "",
                        "type": "boolean"
                    },
                    "doNotRetry": {
                        "description": "",
                        "type": "boolean"
                    },
                    "requestUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "payloadTemplate": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "WebhookUpdate": {
                "type": "object",
                "properties": {
                    "isAdHoc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "eventTypes": {
                        "description": "",
                        "type": "array"
                    },
                    "condition": {
                        "description": "",
                        "type": ""
                    },
                    "ignoreSslErrors": {
                        "description": "",
                        "type": "boolean"
                    },
                    "doNotRetry": {
                        "description": "",
                        "type": "boolean"
                    },
                    "requestUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "payloadTemplate": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "WebhookDispatch": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "",
                        "type": "string"
                    },
                    "webhookId": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "eventType": {
                        "description": "",
                        "type": "string"
                    },
                    "eventData": {
                        "description": "",
                        "type": ""
                    },
                    "calls": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "eventData": {
                "type": "object",
                "properties": {
                    "actorId": {
                        "description": "",
                        "type": "string"
                    },
                    "actorRunId": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "calls": {
                "type": "object",
                "properties": {
                    "startedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "finishedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "responseStatus": {
                        "description": "",
                        "type": "number"
                    },
                    "responseBody": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Abortbuildresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "data": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "offset": {
                        "description": "",
                        "type": "number"
                    },
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "desc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "count": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "Abortrunresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Addrequestresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Buildactorresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "condition2": {
                "type": "object",
                "properties": {
                    "actorTaskId": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Createactorresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Createdatasetresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Createkey-valuestoreresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Createrequestqueueresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Createtaskresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Createversionresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Createwebhookresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "usage": {
                "type": "object",
                "properties": {
                    "pagesCrawled": {
                        "description": "",
                        "type": "number"
                    },
                    "computeUnits": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "items": {
                "type": "object",
                "properties": {
                    "key": {
                        "description": "",
                        "type": "string"
                    },
                    "size": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "data1": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "data2": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "offset": {
                        "description": "",
                        "type": "number"
                    },
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "desc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "count": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "data3": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "offset": {
                        "description": "",
                        "type": "number"
                    },
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "desc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "count": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "data4": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "offset": {
                        "description": "",
                        "type": "number"
                    },
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "desc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "count": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "data5": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "offset": {
                        "description": "",
                        "type": "number"
                    },
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "desc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "count": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "data8": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "offset": {
                        "description": "",
                        "type": "number"
                    },
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "desc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "count": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "data9": {
                "type": "object",
                "properties": {
                    "isTruncated": {
                        "description": "",
                        "type": "boolean"
                    },
                    "exclusiveStartKey": {
                        "description": "",
                        "type": "string"
                    },
                    "nextExclusiveStartKey": {
                        "description": "",
                        "type": "string"
                    },
                    "count": {
                        "description": "",
                        "type": "number"
                    },
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "data10": {
                "type": "object",
                "properties": {
                    "signedUrl": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "data11": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "offset": {
                        "description": "",
                        "type": "number"
                    },
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "desc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "count": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "data12": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "offset": {
                        "description": "",
                        "type": "number"
                    },
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "desc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "count": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "data13": {
                "type": "object",
                "properties": {
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "queueModifiedAt": {
                        "description": "",
                        "type": "string"
                    },
                    "hadMultipleClients": {
                        "description": "",
                        "type": "boolean"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "data14": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "offset": {
                        "description": "",
                        "type": "number"
                    },
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "desc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "count": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "data15": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "offset": {
                        "description": "",
                        "type": "number"
                    },
                    "limit": {
                        "description": "",
                        "type": "number"
                    },
                    "desc": {
                        "description": "",
                        "type": "boolean"
                    },
                    "count": {
                        "description": "",
                        "type": "number"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "envVars1": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "isSecret": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "error": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "message": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Getactorresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getbuildresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getdatasetresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "GetdirectuploadURLresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getheadresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getitemsresponse": {
                "type": "object",
                "properties": {
                    "format": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Getlistofactorsresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistofbuildsresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistofdatasetsresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistofkeysresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistofkey-valuestoresresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistofrequestqueuesresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistofrunsresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistoftaskrunsresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistoftasksresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistofversionsresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistofwebhookdispatchesresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistofwebhooksresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getlistofwebhooksresponse2": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getprivateuserdataresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getpublicuserdataresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getrecordresponse": {
                "type": "object",
                "properties": {
                    "foo": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Getrequestqueueresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getrequestresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getrunresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getstoreresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Gettaskinputresponse": {
                "type": "object",
                "properties": {
                    "myField1      `some-value`": {
                        "description": "",
                        "type": "string"
                    },
                    "myField2      `another-value`": {
                        "description": "",
                        "type": "string"
                    },
                    "myField3      1": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "Gettaskresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getversionresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getwebhookdispatchresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Getwebhookresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "items1": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "retryCount": {
                        "description": "",
                        "type": "number"
                    },
                    "uniqueKe\"": {
                        "description": "",
                        "type": "string"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "method": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Metamorphrunresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "groups": {
                "type": "array"
            },
            "Putitemsrequest": {
                "type": "object",
                "properties": {
                    "foo": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Putrecordrequest": {
                "type": "object",
                "properties": {
                    "foo": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Resurrectrunresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Runactorrequest": {
                "type": "object",
                "properties": {
                    "foo": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Runactorresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Runtaskrequest": {
                "type": "object",
                "properties": {
                    "foo": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Runtaskresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Runtasksynchronously(GET)response": {
                "type": "object",
                "properties": {
                    "bar": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Runtasksynchronously(POST)request": {
                "type": "object",
                "properties": {
                    "foo": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Runtasksynchronously(POST)response": {
                "type": "object",
                "properties": {
                    "bar": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "stats1": {
                "type": "object",
                "properties": {
                    "totalRuns": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "stats4": {
                "type": "object",
                "properties": {
                    "workersUsed": {
                        "description": "",
                        "type": "number"
                    },
                    "durationMillis 1000": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "stats6": {
                "type": "object",
                "properties": {
                    "workersUsed": {
                        "description": "",
                        "type": "number"
                    },
                    "resurrectCount": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "stats7": {
                "type": "object",
                "properties": {
                    "workersUsed": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "stats10": {
                "type": "object",
                "properties": {
                    "totalDispatches": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "Updateactorresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Updaterequestresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Updatetaskinputrequest": {
                "type": "object",
                "properties": {
                    "myField2      `updated-value`": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Updatetaskinputresponse": {
                "type": "object",
                "properties": {
                    "myField1      `some-value`": {
                        "description": "",
                        "type": "string"
                    },
                    "myField2      `updated-value`": {
                        "description": "",
                        "type": "string"
                    },
                    "myField3      1": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "Updatetaskresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Updateversionresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Updatewebhookresponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Withinputrequest": {
                "type": "object",
                "properties": {
                    "foo": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Withinputresponse": {
                "type": "object",
                "properties": {
                    "bar": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Withoutinputresponse": {
                "type": "object",
                "properties": {
                    "foo": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Withoutinputresponse1": {
                "type": "object",
                "properties": {
                    "error": {
                        "description": "",
                        "type": ""
                    }
                }
            }
        }
    }
}